/*
--- 01 TYPOGRAPHY SYSTEM

- Font sizes (px)
10 / 12 / 14 / 16 / 18 / 20 / 24 / 30 / 36 / 44 / 52 / 62 / 74 / 86 / 98

- Font weights
Default: 400
Medium: 500
Semi-bold: 600
Bold: 700

- Line heights
Default: 1
Small: 1.05
Medium: 1.2
Paragraph default: 1.6
Large: 1.8

- Letter spacing
-0.5px
0.75px

--- 02 COLORS



- Primary:
rgba(54, 148, 87, 0.8) main theme RGBA
hsla(141, 47%, 40%, 0.8) main HSL

rgba(200, 230, 210, 1) main text (off grn)

- Tints: of primary

#fdf2e9
#fae5d3
#eb984e

- Shades: 
#cf711f
#45260a

-- Secondary: prob accent tbh, for CTA 
rgba(255, 235, 60, 0.8)
hsla(54, 100%, 62%, 0.8) secondary HSL


 

- Accents:


- Greys

#888
#767676 (lightest grey allowed on #fff)
#6f6f6f (lightest grey allowed on #fdf2e9)
#555
#333

--- 05 SHADOWS

0 2.4rem 4.8rem rgba(0, 0, 0, 0.075);

--- 06 BORDER-RADIUS

Default: 9px
Medium: 11px

--- 07 WHITESPACE

Small elements - padding: 0.4rem
Big elements - padding: 0.4rem 0.8rem

- Spacing system (px)
2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128
*/

@import url("https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300..900;1,300..900&display=swap");

:root {
	font-size: 62.5%;
}

/* CUSTOM STYLES */
:root {
	--main-green: rgba(54, 148, 87, 0.8);

	--secondary-yellow: rgba(255, 235, 60, 0.9);
}

.root-layout {
	overflow-x: hidden;
	overflow-y: visible;
}

body {
	font-size: 1.6rem;
	padding: 1.6rem 2.4rem 0 2.4rem;

	font-family: "Rubik", sans-serif;
	font-optical-sizing: auto;
	font-weight: 400;
	font-style: normal;
}

*,
*::before,
*::after {
	box-sizing: border-box;
}
* {
	margin: 0;
	padding: 0;
	font: inherit;

	min-width: 0;
}

html {
	color-scheme: only dark;
	background-color: rgb(20 20 20);
	/*recheck this later*/
	overflow-x: hidden;
	overflow-y: visible;

	scroll-behavior: smooth !important;
}

body {
	min-height: 100svh;
	min-height: 100vh;
}

img,
picture,
svg,
video {
	display: block;
	max-width: 100%;
}

input,
textarea,
button,
select {
	font: inherit;
}

a {
	color: inherit;
	text-decoration: inherit; /* no underline */
}

/**************************/
/* HEADER */
/**************************/
nav a div:first-child {
	font-weight: 700;
}

nav h1 span,
.footer-logo h1 span {
	/*color: rgb(54, 148, 87);*/
	background-color: rgba(54, 148, 87, 0.8);

	margin: 0 0.2rem 0 0.3rem;
	padding: 0 0.4rem 0 0.4rem;
	border: 0.1rem solid rgb(0, 0, 0);
}
nav h1 sup {
	font-size: 1.6rem;
}

nav div h1 {
	font-size: 3rem;
	line-height: 3.05rem;
}

nav h1:not(:first-child) {
	/*careful this could ruin bunch of code xd*/
	text-indent: 1rem;
}

.root-layout nav {
	display: flex;
	justify-content: space-between;

	overflow-x: hidden;
	overflow-y: visible;

	padding-bottom: 1.6rem;
	border-bottom: 0.1rem solid rgba(54, 148, 87, 0.8);
}

.nav-links {
	display: flex;
	align-self: center;
	gap: 3.2rem;
	margin: 0 3.2rem 0 0;

	font-weight: 500;
	font-size: clamp(2rem, calc(0.0049 * (100vw - 1060px) + 2rem), 2.4rem);

	white-space: nowrap;
}

.nav-links > :not(:last-child) {
	/*box-shadow: 1px 3px 6px rgba(250, 250, 250, 0.2);*/
	color: rgba(200, 230, 210, 1);

	transition-property: color;
	transition-duration: 0.4s;
}

.nav-links > :not(:last-child):hover,
.nav-links > :not(:last-child):active {
	color: var(--secondary-yellow);
	/*box-shadow: 1px 3px 6px rgba(255, 235, 60, 0.2);*/
}

/*
.nav-links > :last-child {
  color: rgba(255, 235, 60, 0.8);

  border: 0.1rem solid rgba(255, 235, 60, 0.9);
  border-radius: 0.3rem;
}
*/

.nav-links > :last-child {
	background-color: rgba(255, 235, 60, 0.9);
	color: rgba(0, 0, 0, 0.8);

	border: 0.1rem solid rgba(255, 235, 60, 0.9);
	border-radius: 0.4rem;

	transition-property: background-color, color, border, box-shadow;
	transition-duration: 0.4s;
}

.nav-links > :last-child:hover,
.nav-links > :last-child:active {
	background-color: rgba(255, 235, 60, 00);
	color: rgba(255, 235, 60, 0.9);

	border: 0.1rem solid rgba(255, 235, 60, 0.9);
	border-radius: 5px;

	box-shadow: 0px 0px 13px rgba(255, 235, 60, 0.4);
}

.nav-links * {
	padding: 0.4rem 0.8rem;
	border-radius: 6px;
}

/**************************/
/* FOOTER */
/**************************/

.footer-bar a {
	display: inline-block;
}
.footer-bar h1 {
	font-size: 1.4rem;
}
.footer-bar h1 > :first-child {
	font-size: 0.8rem;
}

.footer-container {
	display: grid;
	grid-template:
		"nav1 nav2 nav3 nav4 nav5"
		"ft-bar ft-bar ft-bar ft-bar ft-bar";

	border-top: 0.1rem solid rgba(54, 148, 87, 0.8);
}

.footer-container ul {
	margin: 0;
	padding: 0;
	text-indent: 0;
	list-style-type: none;

	display: flex;
	flex-direction: column;
	gap: 1rem;
	font-size: 1.4rem;

	padding: 2rem;
}
.footer-container ul li {
	color: rgba(255, 255, 255, 0.6);
}
.footer-container ul li:first-child {
	color: rgba(54, 148, 87, 0.6);
}

.footer-container ul > :first-child {
	font-weight: 700;
}

.footer-links {
	border-bottom: 0.1rem solid rgba(54, 148, 87, 0.8);
}

.footer-container > :nth-child(1) {
	grid-area: nav1;
}
.footer-container > :nth-child(2) {
	grid-area: nav2;
}
.footer-container > :nth-child(3) {
	grid-area: nav3;
}

.footer-logo {
	display: flex;
	grid-area: ft-bar;
	font-size: 1.2rem;
	line-height: 1.05rem;
	gap: 1rem;

	padding: 0.4rem;

	border-top: 0.1rem solid rgba(54, 148, 87, 0.8);
}

.footer-logo a {
	display: inline-block;
}

.footer-logo p {
	display: inline-block;
	font-size: 1rem;

	/*change color*/
	align-self: end;
}

.footer-logo a div h1:nth-child(2) {
	text-indent: 0.6rem;
}

/**************************/
/* HOME PAGE */
/**************************/
/**************************/
/* HERO PART */
/**************************/

.hero-container {
	display: grid;
	grid-template-columns: 1fr 1fr;
	/*grid-template-rows: calc(100vh - 10.1rem);*/
	/*we need height with nav to be 100vh*/
	/*honestly this requires to get position of the element from RootLayout WHICH WE GOT THERE but I have no idea how to export it
  BESIDE saving it in localState and using it form there in another component > update I did it, shouldve done it before*/

	border-bottom: 0.1rem solid rgba(54, 148, 87, 0.8);
}

.hero-left {
	display: flex;
	flex-direction: row;
	justify-content: center;

	margin-top: auto;
	margin-bottom: auto;

	gap: 4.8rem;
}

.hero-text {
	display: flex;
	gap: 2rem;
	flex-direction: column;
	font-size: clamp(4.4rem, calc(0.0378 * (100vw - 1060px) + 4.4rem), 6.2rem);
	/*
   NOTE FOR ALL!!!!!
   const modifier is ratio of: max-min / MQrangeDiff
   max-min is visible af here
   MQrangeDiff is on what range I want this to occur
   */

	font-weight: 600;
}

/*
- Spacing system (px)
2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128
*/
.hero-main-text {
	display: flex;
	flex-direction: column;
	gap: 1.2rem;
	font-size: clamp(5.2rem, calc(0.0462 * (100vw - 1060px) + 5.2rem), 7.4rem);
}

.hero-main-text span {
	color: rgba(54, 148, 87, 0.8);
}

.hero-main-text * {
	color: rgba(200, 230, 210, 1);
	text-shadow: 1px 5px 20px rgba(0, 0, 0, 0.8);
}

.hero-cta {
	display: flex;
	flex-direction: row-reverse;
	gap: 2.4rem;

	align-items: center;
	justify-content: space-between; /*just in case*/
}

.hero-cta > :not(:first-child) {
	/*text-decoration: underline 1px rgba(255, 235, 60, 0.9);*/

	color: rgba(200, 230, 210, 1);

	border-bottom: solid 1px rgba(255, 235, 60, 0.9);
	padding: 0.4rem;

	transition-property: color, border;
	transition-duration: 0.4s;
}

.hero-cta > :not(:first-child):hover,
.hero-cta > :not(:first-child):active {
	color: rgba(255, 235, 60, 0.9);

	border-bottom: solid 1px transparent;
}

.hero-cta > :first-child {
	padding: 0.4rem 0.8rem;
	border-radius: 0.6rem;

	background-color: rgba(255, 235, 60, 0.9);
	color: rgba(0, 0, 0, 0.85);

	border: 0.1rem solid rgba(255, 235, 60, 0.9);

	transition-property: background-color, color, border, box-shadow;
	transition-duration: 0.4s;
}

.hero-cta > :first-child:hover,
.hero-cta > :first-child:active {
	background-color: rgba(255, 235, 60, 00);
	color: rgba(255, 235, 60, 0.9);

	border: 0.1rem solid rgba(255, 235, 60, 0.9);

	box-shadow: 0px 0px 20px rgba(255, 235, 60, 0.4);
}

.hero-icons {
	display: flex;
	flex-direction: column;

	gap: 0.6rem;
}
/*gap and margin are there to align the first item with the center of text div and to space other items fittingly*/
.hero-icons a {
	display: flex;

	margin: 0.6rem 0;
	justify-content: center;
	align-items: center;
}

.hero-icons a svg {
	font-size: clamp(3.6rem, calc(0.0336 * (100vw - 1060px) + 3.6rem), 5.2rem);
	padding: 0.4rem;
	/*transition: 0.4s;*/
	transition-property: border, background-color, color, box-shadow;
	transition-duration: 0.4s;

	border-radius: 8px;
	border: solid 1px rgba(0, 0, 0, 1);
	background-color: rgba(54, 148, 87, 0.8);
	color: rgba(25, 25, 25, 0.9);

	box-shadow: 1px 3px 6px rgba(0, 0, 0, 0.8);
}

.hero-icons a svg:hover,
.hero-icons a svg:active {
	border: solid 1px rgba(255, 235, 60, 0.9);
	background-color: rgba(25, 25, 25, 0.9);
	color: rgba(255, 235, 60, 0.9);

	box-shadow: 0px 0px 20px rgba(255, 235, 60, 0.4);
}

.hero-img {
	display: flex;
	justify-content: center;
	align-items: center;
	justify-self: center;
	width: clamp(375px, calc(0.2626 * (100vw - 1060px) + 375px), 500px);
	margin: 50px 0 50px 0;
	transform: translateX(-8%);
}
.hero-img * {
	box-sizing: border-box;
	border-radius: 30px;

	box-shadow: 3px 5px 20px rgba(0, 0, 0, 0.8),
		-3px -5px 20px rgba(50, 50, 50, 0.4);
}

/**************************/
/* BELOW HERO PART */
/**************************/

.home-container {
	display: grid;
	grid-template: min-content min-content 1fr / 1fr 1fr;
}

.home-container div:nth-child(2) {
	justify-content: start;
}

.home-container div:nth-child(3) {
	justify-content: end;
}

.home-container div {
	display: flex;
}
/* RECHECK if error
.home-container div:has(img) {
  align-items: center;
  justify-content: center;
}
*/
.home-container div:nth-child(2) img {
	width: clamp(300px, 60%, 400px);
	align-self: center;
	/*
	border-radius: 20px;
	margin-top: clamp(32px, auto, auto);
	margin-left: 3.2rem;
	margin-bottom: clamp(32px, auto, auto);



	margin: clamp(32px, 40%, 69px), 0, 32px, clamp(32px, 40%, 69px);
*/

	/*margin: clamp(32px, 10%, 240px) clamp(32px, 10%, 240px)
		clamp(32px, 10%, 240px) 0;
*/

	margin: clamp(2.4rem, calc(0.0293 * (100vw - 1060px) + 2.4rem), 4.8rem);

	box-shadow: 4px 6px 20px rgba(0, 0, 0, 0.8); /*,
  -3px -5px 20px rgba(50, 50, 50, 0.4);*/
	border-radius: 20px;
	opacity: 80%;
}

.home-container div:nth-child(3) img {
	/* min-width: 430px; value when MQ <1040px*/
	width: clamp(460px, calc(0.3537 * (100vw - 1060px) + 460px), 750px);
	/*coef changed for for vw 1880px */
	border-radius: 20px;
	margin: clamp(24px, calc(0.0244 * (100vw - 1060px) + 24px), 44px);

	/*just in case, unneeded*/
	align-self: center;
	justify-self: center;

	box-shadow: 3px 5px 20px rgba(0, 0, 0, 0.8),
		-3px -5px 20px rgba(50, 50, 50, 0.4);
	opacity: 80%;
}

.home-container > :not(:last-child) {
	border-bottom: 0.1rem solid rgba(54, 148, 87, 0.8);
}

.home-container > :last-child,
.home-container > :nth-last-child(2) {
	border-bottom: unset;
}

.home-about,
.home-classes {
	display: flex;
	justify-content: center;
	flex-direction: column;
	gap: 1.2rem;

	padding: clamp(2.4rem, calc(0.0293 * (100vw - 1060px) + 2.4rem), 4.8rem);
	font-size: 3rem;
	color: rgba(200, 230, 210, 1);
}

.about-container {
	/*purpose of this is centering about section, classes sec doenst need it bcs the photo on the left gives enough visual input*/
	/*self note, your image padding below right will be the same for this*/
	/*perhaps no, it feels good for some reason, maybe offset?*/
	display: inline-flex;
	align-self: center;
	flex-direction: column;
	gap: 1.2rem;
	min-width: 0px;
}

.home-about > * > :first-child,
.home-classes > :first-child {
	font-size: 4.4rem;
	font-weight: 500;

	color: rgba(54, 148, 87, 1);
}

.home-about > * > div a,
.home-classes div a {
	transition: 0.3;
	text-decoration: underline 1px var(--main-green);
}
.home-about > * > div a:hover,
.home-classes div a:hover,
.home-about > * > div a:active,
.home-classes div a:active {
	color: rgba(54, 148, 87, 0.8);
	text-decoration: underline 1px transparent;
}

.home-about svg,
.home-classes svg {
	color: var(--main-green);
}

.home-about * > *,
.home-classes * {
	justify-items: end;

	gap: 1rem;

	transition-property: color, text-decoration;
	transition-duration: 0.6s;
}

.home-about > * > :last-child,
.home-classes > :last-child {
	/*margin: 1.2rem 0;*/

	display: inline-block;
	max-width: fit-content;

	font-weight: 500;
	padding: 0.4rem 0.8rem;
	border-radius: 0.6rem;
	background-color: rgba(255, 235, 60, 0.9);
	color: rgba(0, 0, 0, 0.85);
	border: 0.1rem solid rgba(255, 235, 60, 0.9);

	transition-property: background-color, color, border, box-shadow;
	transition-duration: 0.4s;
}

.home-about > * > :last-child:hover,
.home-classes > :last-child:hover,
.home-about > * > :last-child:active,
.home-classes > :last-child:active {
	background-color: rgba(255, 235, 60, 00);
	color: hsla(54, 100%, 62%, 0.9);
	border: 1px solid rgba(255, 235, 60, 0.9);
	box-shadow: 0px 0px 20px rgba(255, 235, 60, 0.4);
}

/********************
CTA SECTION
*********************/
/* Hero after Z CtA */
/* I will kms section */
/*you NEEED to make a parent to this section that will make them go towards the center or otherwise you will encounter splitting on bigger screens (or MQ to each vw*/
/*actually you dont have to, it is already set as 2 different items, you just need to self center them*/

.home-cta-left,
.home-cta-right {
	justify-content: center;
	flex-flow: column;
	/*position: relative;*/
	border-bottom: none;

	/*had to justify bottom 2 items by themselves so that they can be in center, they are 2 different items so they would be centered in their box, shouldve justify-items: center*/
	--width: 600px;

	height: calc(var(--width) * 1);
	width: clamp(
		calc(475px),
		calc(0.4727 * (100vw - 1060px) + 475px),
		var(--width)
	);
	/*basically 100vw - 1060px is function that has 0 begining at 1060px display width where 100vw is variable
   0.4727 is modifier that makes scaling up to 1536px happen in 225px instead of 476px
   +475px is constant so that function begins at 475px instead of 0px
   min and max are self explanatory
   */

	justify-self: center;

	/* outline: 2px solid white; */
	justify-content: start;
	/*align-items: center;*/

	background-position: center;
}

.home-cta-right::after {
	/*purely for arrow in this section*/
	position: absolute;
}

/*
"./photos/failed512s2.svg"
"./photos/success512s2.svg"
*/
/*add zoom in effect for the background, maybe position zoom more towards top*/
/*zoom will actually jsut be 110% and blur 2 to 3px*/
/*letters from that offgreen to green//yellow shade*/
.background-left {
	position: absolute;

	/*so that it cannot get selected*/
	pointer-events: none;
	user-select: none;
	/*
	background-repeat: no-repeat;
	background-position: center;
   */
	width: 70%;
	height: 70%;

	top: 50%;
	left: 50%;
	translate: -50% -50%;

	filter: blur(1px);

	border-radius: inherit;

	transition: 0.9s;

	z-index: 10;
}

/* event to be done in JS */
.background-left:hover,
.background-right:hover {
	filter: blur(0px);
	background-size: 110% 110%;
	background-position: center;
}

.gradient-left {
	height: 100%;
	width: 100%;
	position: absolute;
	overflow: none;
	background-repeat: no-repeat;
	background-size: 100% 200%;
	background-position: top -300px left 0px;

	background-image: linear-gradient(
		rgba(0, 0, 0, 0.8) 15%,
		hsla(141, 70%, 70%, 0.8) 200%
	);

	filter: blur(0px);

	border-radius: inherit;

	transition: 0.6s;

	z-index: 30;
}

.home-cta-left {
	position: relative;
	justify-self: right;

	/*border-radius: 40px 0 0 40px;*/

	margin: clamp(32px, 10%, 64px) 0 clamp(32px, 10%, 64px)
		clamp(32px, 100%, 64px);

	border-radius: 40px 0 0 40px;

	z-index: 11;
}
/*
.home-cta-left:hover {
}*/

.border-left {
	content: "";
	position: absolute;
	height: calc(100% + 2px);
	width: calc(100% + 1px);
	background: linear-gradient(to top, transparent, hsla(141, 100%, 80%, 1));
	border-radius: inherit;

	bottom: -1px;
	right: 0px;
	/*translate: -50% -50%;*/

	box-sizing: initial;

	opacity: 00%;

	z-index: 1;

	transition: 0.6s;
}
/* transition does not work at all */
/* animation requires @keyframes where we are in HTML inline */
/* perhaps just have the filter on by itself and change opacity which is simpler solution reagardless*/

/*backgrounds are having z-index because otherwise they are not on top enough to be hovered on*/
.background-right {
	position: absolute;
	height: 70%;
	width: 70%;
	top: 50%;
	left: 50%;
	translate: -50% -50%;

	pointer-events: none;
	user-select: none;

	filter: blur(1px);
	z-index: 20;
	border-radius: inherit;

	transition: 0.9s;
}

.gradient-right {
	height: 100%;
	width: 100%;
	overflow: none;
	position: absolute;
	background-repeat: no-repeat;
	background-size: 100% 200%;
	background-position: top -300px left 0px;
	/*in JSX bck-pos top -150px to 0 animation should apply*/
	/*and increase border right to 100%*/

	/*gradient property has been changed APPLY CHANGES TO LEFT SIDE!!!*/
	background-image: linear-gradient(
		rgba(0, 0, 0, 0.8) 15%,
		hsla(54, 70%, 70%, 0.8) 200%
	);

	/*transform: translate(0, 0px); does not work*/

	filter: blur(0px);

	border-radius: inherit;

	transition: 0.6s;

	z-index: 30;
}

.home-cta-right {
	justify-self: left;
	position: relative;
	/*padding: 3rem 3rem 3rem 0;*/

	border-radius: 0 40px 40px 0;
	margin: clamp(32px, 10%, 64px) clamp(32px, 10%, 64px)
		clamp(32px, 100%, 64px) 0;

	/*
  border-left: 4px inset transparent;
  border-right: 4px inset transparent;
  border-top: 4px inset transparent;
  border-bottom: 4px inset transparent;
  overflow: hidden;
  */
	z-index: 10;
	/*no need for transition of whole elm*/
	transition: all linear 0s;
}
/*150% to 250% into having border (any kind) that is yellow*/
/*125 to 200*/
.border-right {
	content: "";
	position: absolute;
	height: calc(100% + 2px);
	width: calc(100% + 1px);
	background: linear-gradient(to top, transparent, hsla(54, 100%, 80%, 1));
	border-radius: inherit;

	bottom: -1px;
	left: 0px;
	/*this is currently the best way to have border in such way that it wont bug AT ALL when being resized*/

	box-sizing: initial;

	z-index: 1;
	/*rev op=0 z=1*/
	opacity: 00%;

	transition: 0.6s;
}

/*using border while not having border bottom with border-radius creates a lot of approximation errors so I think it is far better to have solution with ::after element (but having already hover effect means that we have to add <div> in HTML*/

/*
.home-cta-right:hover {
  border-left: 4px inset hsla(54, 100%, 62%, 1);
  border-right: 4px inset hsla(54, 100%, 62%, 1);
  border-top: 4px inset hsla(54, 100%, 62%, 1);
}
*/

/*
.overlay-dk {
  border-image: linear-gradient(hsl(0 20% 0% / 0.6), hsl(0 20% 0% / 0.6)) fill 1;
}
*/

/*
.home-cta-left > :not(img),
.home-cta-right > :not(img) {
  position: absolute;
}
*/

.home-cta-left > p,
.home-cta-right > p,
.home-cta-right > a {
	word-spacing: 100vw; /*only way to force words into a new line always*/
	z-index: 999;

	font-size: 8rem;
	font-weight: 800;
	color: hsla(0, 0%, 80%, 1);

	transition-property: color;
	transition-duration: 0.6s;

	/*color: hsl(140, 38%, 84%);*/

	padding: 3.2rem;
}
.home-cta-right > p > a {
	font-size: 6rem;
	font-weight: 800;
	color: hsla(0, 0%, 80%, 1);

	display: inline-block;
	max-width: -moz-fit-content;
	max-width: fit-content;
	font-weight: 500;
	padding: 0.4rem 0.8rem;
	border-radius: 0.6rem;
	background-color: rgba(255, 235, 60, 0.9);
	color: rgba(0, 0, 0, 0.85);
	border: 0.1rem solid rgba(255, 235, 60, 0.9);
	transition: 0.4s;
}

.home-cta-right > p > a:hover {
	background-color: rgba(20, 20, 20, 0.8);
	color: hsla(54, 100%, 62%, 0.9);
	border: 1px solid rgba(255, 235, 60, 0.9);
	box-shadow: 0px 0px 20px rgba(255, 235, 60, 0.4);
}

:any-link {
	cursor: pointer;
	text-decoration: none;
}
