/*
LANDSCAPE QUERIES
*/
@media (1536px < width) and (864px < height) and ((orientation: landscape)) {
	/*big desktop*/
	:root {
		--device: "desktop";
	}

	.home-about > * > :is(div),
	.home-classes > :is(div) {
		max-width: 600px;
	}

	.home-about,
	.home-classes {
		font-size: 3.6rem;
	}

	.home-about > * > :first-child,
	.home-classes > :first-child {
		font-size: 5.2rem;
	}

	.home-cta-left,
	.home-cta-right {
		--min-margin: 32px;
		--ideal-margin: calc((100vw - 1536px) / 2);
		--max-margin: 96px;

		margin: clamp(
			var(--min-margin),
			var(--ideal-margin),
			var(--max-margin)
		);

		border-radius: 40px;
	}

	.home-cta-left {
		margin-right: clamp(
			calc(var(--min-margin) / 2),
			calc(var(--ideal-margin) / 2),
			calc(var(--max-margin) / 2)
		);
	}
	.home-cta-right {
		margin-left: clamp(
			calc(var(--min-margin) / 2),
			calc(var(--ideal-margin) / 2),
			calc(var(--max-margin) / 2)
		);
	}

	.border-left,
	.border-right {
		height: calc(100% + 1px);
		width: calc(100% + 2px);
		bottom: 0px;
		left: -1px;
	}

	/*
	.home-cta-right::after {
		position: absolute;
		width: 100%;
		height: 100%;
		background-color: rgba(0, 255, 0, 0.1);
		content: "";
		transform: rotate(45deg);
		left: -125%;
		top: 0%;
		
		z-index: -100;
	}
   */

	.home-cta-left > p,
	.home-cta-right > p,
	.home-cta-right > a {
		font-size: 8.5rem;
	}
}

/*
Δquery = 292px; 
w0 = 768px; MQmin
actually you are able to nest calc()


// COPY THIS vvvvv
vvvvvvvvvvvvvvvvvv
vvvvvvvvvvvvvvvvvv

for root: {
--MQmino: qmin;
--MQmin: calc(var(--MQmino) * 1px);
--MQmaxo: qmax;
}

--Wmino: min;
--Wmaxo: max;
--Wmin: calc(var(--Wmino) * 1px);
--Wmax: calc(var(--Wmaxo) * 1px);

width: clamp(
	var(--Wmin),
	calc(
		calc(
			calc(var(--Wmaxo) - var(--Wmino)) /
			calc(var(--MQmaxo) - var(--MQmino))
      ) * calc(100vw - var(--MQmin)) + var(--Wmin)
	),
	var(--Wmax)
);
//COPY THIS ^^^^^^
^^^^^^^^^^^^^^^^^^ IF REM ΔW * 10 !!!!! bcs REM = px/10
^^^^^^^^^^^^^^^^^^ 
dont do width if u dont need width of course, change width to whatever
//finished the function
//NOTE, shortcuts can be anything, its fine because its local scoped regardlessly w(idth) f(font)s(ize) pad(ding), mar(gin) gap

--Wmino: min;
--Wmaxo: max;
--Wmin: calc(var(--Wmino) * 1px);
--Wmax: calc(var(--Wmaxo) * 1px);
--prefClamp: 
   calc(
		calc(
			calc(var(--Wmaxo) - var(--Wmino)) /
			calc(var(--MQmaxo) - var(--MQmino))
      ) * calc(100vw - var(--MQmin)) + var(--Wmin)
	);

width: clamp(
	var(--Wmin),
   var(--prefClamp),
	var(--Wmax)
);


the only way to CONVERT UNITLESS units is to multiply them by the needed unit
--Wmino: 200;
--Wmin: calc(200 * 1px); //|-> 200px; 
*/
@media (768px <= width < 1060px) and ((orientation: landscape)) {
	/*small desktop*/
	/*Navigation bar*/

	:root {
		--MQmino: 768;
		--MQmin: calc(var(--MQmino) * 1px);
		--MQmaxo: 1060;

		--device: "desktop";
	}
	nav div h1 {
		font-size: clamp(2.4rem, calc(0.0021 * (100vw - 768px) + 2.4rem), 3rem);
		line-height: clamp(
			2.46rem,
			calc(0.0022 * (100vw - 768px) + 2.25rem),
			3.1rem
		);
	}

	nav h1:not(:first-child) {
		text-indent: 1rem;
	}

	.nav-links {
		gap: clamp(1.2rem, 0vw, 3rem);
		font-size: clamp(1.8rem, 0vw, 2rem);
	}

	/****************/
	/* hero section */

	.home-container {
		grid-template-columns: 50% 50%;
	}

	.home-about {
		padding-right: 0;
	}

	/**/

	.hero-img {
		width: clamp(180px, calc(0.24 * (100vw - 11060px) + 250px), 475px);
		/*768 to 1060*/ /*old way is above*/

		/*perfected try*/
		--Wmino: 180;
		--Wmaxo: 250;
		--Wmin: calc(var(--Wmino) * 1px);
		--Wmax: calc(var(--Wmaxo) * 1px);

		width: clamp(
			var(--Wmin),
			calc(
				calc(
						calc(var(--Wmaxo) - var(--Wmino)) /
							calc(var(--MQmaxo) - var(--MQmino))
					) * calc(100vw - var(--MQmin)) + var(--Wmin)
			),
			var(--Wmax)
		);
	}

	.hero-left {
		gap: 3rem;
	}

	.hero-main-text {
		display: flex;
		flex-direction: column;
		gap: 1rem;
		/*
		font-size: clamp(
			3.6rem,
			calc(0.0415 * (100vw - 11060px) + 3.6rem),
			4rem
		);*/

		--Wmino: 3.6;
		--Wmaxo: 4;
		--Wmin: calc(var(--Wmino) * 1rem);
		--Wmax: calc(var(--Wmaxo) * 1rem);

		font-size: clamp(
			var(--Wmin),
			calc(
				calc(
						calc((var(--Wmaxo) - var(--Wmino)) * 10) /
							calc(var(--MQmaxo) - var(--MQmino))
					) * calc(100vw - var(--MQmin)) + var(--Wmin)
			),
			var(--Wmax)
		);
	}

	.hero-text {
		gap: 1.4rem;
		/*
      font-size: clamp(
			2.8rem,
			calc(0.0415 * (100vw - 11060px) + 3.6rem),
			3.2rem
		); */

		--Wmino: 2.8;
		--Wmaxo: 3.2;
		--Wmin: calc(var(--Wmino) * 1rem);
		--Wmax: calc(var(--Wmaxo) * 1rem);

		font-size: clamp(
			var(--Wmin),
			calc(
				calc(
						calc((var(--Wmaxo) - var(--Wmino)) * 10) /
							calc(var(--MQmaxo) - var(--MQmino))
					) * calc(100vw - var(--MQmin)) + var(--Wmin)
			),
			var(--Wmax)
		);
	}

	.hero-cta {
		gap: 1.8rem;
	}

	.hero-cta > :first-child {
		padding: 0.2rem 0.6rem;
		border-radius: 6px;
	}

	.hero-icons {
		gap: clamp(0rem, calc(0.0049 * (100vw - 11060px) + 0.6rem), 0.6rem);

		--Wmino: 0;
		--Wmaxo: 0.6;
		--Wmin: calc(var(--Wmino) * 1rem);
		--Wmax: calc(var(--Wmaxo) * 1rem);

		gap: clamp(
			var(--Wmin),
			calc(
				calc(
						calc((var(--Wmaxo) - var(--Wmino)) * 10) /
							calc(var(--MQmaxo) - var(--MQmino))
					) * calc(100vw - var(--MQmin)) + var(--Wmin)
			),
			var(--Wmax)
		);
	}

	.hero-icons a {
		margin: 0.5rem 0;
	}

	.hero-icons a svg {
		font-size: clamp(26px, calc(0.0341 * (100vw - 11060px) + 28px), 28px);

		--Wmino: 26;
		--Wmaxo: 28;
		--Wmin: calc(var(--Wmino) * 1px);
		--Wmax: calc(var(--Wmaxo) * 1px);

		font-size: clamp(
			var(--Wmin),
			calc(
				calc(
						calc((var(--Wmaxo) - var(--Wmino))) /
							calc(var(--MQmaxo) - var(--MQmino))
					) * calc(100vw - var(--MQmin)) + var(--Wmin)
			),
			var(--Wmax)
		);
	}

	/**************/
	/* below Hero */
	/**************/
	/*
   clamp( , calc((100vw - 768px) + 0rem),  );
   */

	.about-container,
	.home-classes {
		gap: clamp(1rem, calc((100vw - 768px) + 0rem), 1.2rem);
		font-size: clamp(2.4rem, calc((100vw - 768px) + 0rem), 3rem);

		--Gmino: 1;
		--Gmaxo: 1.2;
		--Gmin: calc(var(--Gmino) * 1rem);
		--Gmax: calc(var(--Gmaxo) * 1rem);

		gap: clamp(
			var(--Gmin),
			calc(
				calc(
						calc((var(--Gmaxo) - var(--Gmino)) * 10) /
							calc(var(--MQmaxo) - var(--MQmino))
					) * calc(100vw - var(--MQmin)) + var(--Gmin)
			),
			var(--Gmax)
		);
		/**/
		--FSmino: 2.4;
		--FSmaxo: 3;
		--FSmin: calc(var(--FSmino) * 1rem);
		--FSmax: calc(var(--FSmaxo) * 1rem);

		--prefClamp: clamp(
			var(--FSmin),
			calc(
				calc(
						calc((var(--FSmaxo) - var(--FSmino)) * 10) /
							calc(var(--MQmaxo) - var(--MQmino))
					) * calc(100vw - var(--MQmin)) + var(--FSmin)
			),
			var(--FSmax)
		);

		font-size: clamp(var(--Wmin), var(--prefClamp), var(--Wmax));
	}

	.home-about > * > :first-child,
	.home-classes > :first-child {
		font-size: clamp(4rem, calc((100vw - 768px) + 0rem), 4.4rem);

		--FSmino: 4;
		--FSmaxo: 4.4;
		--FSmin: calc(var(--FSmino) * 1rem);
		--FSmax: calc(var(--FSmaxo) * 1rem);

		font-size: clamp(
			var(--FSmin),
			calc(
				calc(
						calc((var(--FSmaxo) - var(--FSmino)) * 10) /
							calc(var(--MQmaxo) - var(--MQmino))
					) * calc(100vw - var(--MQmin)) + var(--FSmin)
			),
			var(--FSmax)
		);
	}

	.home-about > * > :last-child,
	.home-classes > :last-child {
		border-radius: 0.6rem;
		padding: clamp(0.2rem, calc(0.0069 * (100vw - 768px) + 0.2rem), 0.4rem)
			clamp(0.4rem, calc(0.0137 * (100vw - 768px) + 0.4rem), 0.8rem);

		--PADmino: 0.2;
		--PADmaxo: 0.4;
		--PADmin: calc(var(--PADmino) * 1rem);
		--PADmax: calc(var(--PADmaxo) * 1rem);
		--prefClamp: calc(
			calc(
					calc((var(--PADmaxo) - var(--PADmino)) * 10) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--PADmin)
		);

		padding: clamp(var(--PADmin), var(--prefClamp), var(--PADmax))
			clamp(
				calc(2 * var(--PADmin)),
				calc(2 * var(--prefClamp)),
				calc(2 * var(--PADmax))
			);

		/**/
		font-size: clamp(2.4rem, calc((100vw - 768px) + 0rem), 3rem);

		--FSmino: 2.4;
		--FSmaxo: 3;
		--FSmin: calc(var(--FSmino) * 1rem);
		--FSmax: calc(var(--FSmaxo) * 1rem);

		font-size: clamp(
			var(--FSmin),
			calc(
				calc(
						calc((var(--FSmaxo) - var(--FSmino)) * 10) /
							calc(var(--MQmaxo) - var(--MQmino))
					) * calc(100vw - var(--MQmin)) + var(--FSmin)
			),
			var(--FSmax)
		);
	}
	/*
	:root {
		--prefClamp: calc(
			calc(
					calc(var(--Wmaxo) - var(--Wmino)) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--Wmin)
		);

		--Wmino: 1200;
		--Wmaxo: 1500;
		--Wmin: calc(var(--Wmino) * 1px);
		--Wmax: calc(var(--Wmaxo) * 1px);
	}
   this absolutelly does not work, maybe workaround with Rect component functions and params? But perhaps it is too much to do?
   */

	.home-container div:nth-child(2) img {
		--Wmino: 250;
		--Wmaxo: 300;
		--Wmin: calc(var(--Wmino) * 1px);
		--Wmax: calc(var(--Wmaxo) * 1px);
		--prefClamp: calc(
			calc(
					calc(var(--Wmaxo) - var(--Wmino)) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--Wmin)
		);
		width: clamp(var(--Wmin), var(--prefClamp), var(--Wmax));

		display: block;
	}

	.home-container div:nth-child(2) {
		display: flex;
		align-items: center;
	}

	.home-container div:nth-child(3) {
	}

	.home-container div:nth-child(3) img {
		width: clamp(320px, calc(0.3537 * (100vw - 1060px) + -460px), 460px);
		/* to find all depricated code, ctrl+f "calc(0." */

		--Wmino: 320;
		--Wmaxo: 460;
		--Wmin: calc(var(--Wmino) * 1px);
		--Wmax: calc(var(--Wmaxo) * 1px);
		--prefClamp: calc(
			calc(
					calc(var(--Wmaxo) - var(--Wmino)) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--Wmin)
		);
		width: clamp(var(--Wmin), var(--prefClamp), var(--Wmax));
	}

	/*to have width of others be proper u need to fix the widest element
   //OR change grid to aa bb cc and give it custom width
   */

	.home-cta-left,
	.home-cta-right {
		--width: clamp(320px, calc(0.2805 * (100vw - 1060px) + -420px), 420px);
		/**/

		--Wmino: 320;
		--Wmaxo: 420;
		--Wmin: calc(var(--Wmino) * 1px);
		--Wmax: calc(var(--Wmaxo) * 1px);
		--prefClamp: calc(
			calc(
					calc((var(--Wmaxo) - var(--Wmino))) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--Wmin)
		);
		--width: clamp(var(--Wmin), var(--prefClamp), var(--Wmax));

		width: var(--width);
		height: calc(var(--width) + 50px);
	}

	.home-container {
		--Wmino: 30;
		--Wmaxo: 48;
		--Wmin: calc(var(--Wmino) * 1px);
		--Wmax: calc(var(--Wmaxo) * 1px);

		--prefClamp: calc(
			calc(
					calc((var(--Wmaxo) - var(--Wmino))) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--Wmin)
		);
		--cta-mar: clamp(var(--Wmin), var(--prefClamp), var(--Wmax)) 0;
	}
	/* |V||V| */
	.home-cta-left {
		margin: var(--cta-mar);
	}
	.home-cta-right {
		margin: var(--cta-mar);
	}
	/* ------ */
	.home-cta-left > p,
	.home-cta-right > p,
	.home-cta-right > a,
	.home-cta-right > p > a {
		font-size: clamp(4.4rem, calc(0.0378 * (100vw - 1060px) + -6rem), 6rem);

		--FSmino: 4.4;
		--FSmaxo: 6;
		--FSmin: calc(var(--FSmino) * 1rem);
		--FSmax: calc(var(--FSmaxo) * 1rem);

		--prefClamp: clamp(
			var(--FSmin),
			calc(
				calc(
						calc((var(--FSmaxo) - var(--FSmino)) * 10) /
							calc(var(--MQmaxo) - var(--MQmino))
					) * calc(100vw - var(--MQmin)) + var(--FSmin)
			),
			var(--FSmax)
		);

		font-size: clamp(var(--FSmin), var(--prefClamp), var(--FSmax));
	}

	/*
	.home-cta-right > p > a {
		font-size: clamp(4.4rem, calc(0.0378 * (100vw - 1060px) + -6rem), 6rem);
	}
*/

	.footer-container ul {
		gap: 1rem;
		font-size: 1.4rem;
		padding: 2rem;

		gap: 0.8rem;
		font-size: 1.2rem;

		padding: 2rem 0rem;
	}
	.footer-container ul:first-child {
		padding-left: 2rem;
	}
}

/*MOBILE query*/
/*do SVH instead of vh*/
@media (320px <= width <= 500px) and (900px > height) and ((orientation: portrait)) {
	:root {
		--MQmino: 320;
		--MQmin: calc(var(--MQmino) * 1px);
		--MQmaxo: 500;
		--MQmax: calc(var(--MQmaxo) * 1px);

		--device: "phone";
		/*idea for having a named custom variable so that you can make conditions in JS due to height diff*/
	}

	:root {
		position: relative;
	}

	.nav-links {
		position: fixed;
		flex-direction: column;
		right: 0;
		top: 0;
		margin: 0;
		transform: translate(100%, 0);

		z-index: 1000000;

		transition: ease-in-out 0.6s;

		height: 100vh;
		background-color: rgba(0, 0, 0, 1);

		width: 33%;

		gap: 32px;

		border-left: 1px solid rgba(54, 148, 87, 0.8);
	}

	/*cant use after due to propagation, I have to use antother element so that different element can catch the event*/
	.nav-links-filter {
		content: "";

		position: fixed;

		width: 400%;
		height: 110%;

		z-index: 100;

		backdrop-filter: blur(0.8px);
		background-color: rgba(0, 0, 0, 0.2);

		transition: 0.3s;

		left: 0;
		transform: translate(0, -10%);

		transition: visibility 0.6s, opacity 0.6s;
		visibility: hidden;
		opacity: 0;

		/* to negate this whole thing just change display property 
      find this in the JS file and then just do it
      */
	}

	.nav-links > * {
		width: fit-content;
		padding: 0 0;
		margin: 0px 12px;
		text-wrap: wrap;
	}

	.nav-links > *:last-child {
		padding: 0.4rem 0.8rem;
	}

	.nav-links > *:first-child {
		margin-top: 24px;
	}

	.root-menu {
		display: inline-block;
		align-self: center;
		--d: 36px;
		width: var(--d);
		height: var(--d);

		margin: 4px;

		color: rgba(54, 148, 87, 0.8);
		transition-property: color;
		transition-duration: 0.4s;

		background: none;

		border: none;
		padding: 0;
		font: inherit;
		cursor: pointer;
		outline: inherit;
	}

	.root-menu:hover,
	.root-menu:active {
		cursor: pointer;
		color: rgba(255, 235, 60, 0.9);
	}
	.root-menu svg {
		width: 100%;
		height: 100%;
	}

	.root-menu svg * {
	}

	/**/ /**/
	/**************
   Hero section
   ***************/

	.hero-container {
		--device: "phone";

		position: relative;
		grid-template-columns: 1fr;

		--MQmino: 320;
		--MQmin: calc(var(--MQmino) * 1px);
		--MQmaxo: 500;
		--VHmino: 888;
		--VHmin: 888px;
		--VHmaxo: 568;
		--VHmax: 568px;
		/* values set for the JS file for dynamic variable change */

		transition: 0.4s;
	}

	.hero-container::after {
		content: "";
		width: 100%;
		height: 100%;
		position: absolute;
		left: 0;
		bottom: 0;
		background-color: rgba(19, 19, 19, 0.5);
		z-index: -1;
		backdrop-filter: blur(2px);
	}

	.hero-img {
		position: absolute;
		align-self: center;
		transform: translateX(0);

		z-index: -1;
		/* u need to add brother element for dimming in the absolutelly same way u did for the menu bar */

		--IMGmino: 270;
		--IMGmaxo: 300;
		--IMGmin: calc(var(--IMGmino) * 1px);
		--IMGmax: calc(var(--IMGmaxo) * 1px);
		--prefClamp: clamp(
			var(--IMGmin),
			calc(
				calc(
						calc((var(--IMGmaxo) - var(--IMGmino)) * 1) /
							calc(var(--MQmaxo) - var(--MQmino))
					) * calc(100vw - var(--MQmin)) + var(--IMGmin)
			),
			var(--IMGmax)
		);

		width: clamp(var(--IMGmin), var(--prefClamp), var(--IMGmax));
	}

	.hero-img::before {
		content: "";
		position: absolute;

		background-color: rgba(5, 5, 5, 0.5);
		border-radius: 30px;
		z-index: 0;
		height: 100%;
		width: 100%;
	}

	.hero-left {
		--GAPmino: 20;
		--GAPmaxo: 48;
		--GAPmin: calc(var(--GAPmino) * 1px);
		--GAPmax: calc(var(--GAPmaxo) * 1px);
		--prefClamp: calc(
			calc(
					calc((var(--GAPmaxo) - var(--GAPmino)) * 1) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--GAPmin)
		);

		gap: clamp(var(--GAPmin), var(--prefClamp), var(--GAPmax));
	}

	.hero-main-text {
		--FSmino: 3.2;
		--FSmaxo: 4;
		--FSmin: calc(var(--FSmino) * 1rem);
		--FSmax: calc(var(--FSmaxo) * 1rem);
		--prefClamp: clamp(
			var(--FSmin),
			calc(
				calc(
						calc((var(--FSmaxo) - var(--FSmino)) * 10) /
							calc(var(--MQmaxo) - var(--MQmino))
					) * calc(100vw - var(--MQmin)) + var(--FSmin)
			),
			var(--FSmax)
		);

		font-size: clamp(var(--FSmin), var(--prefClamp), var(--FSmax));
	}

	.hero-text {
		--FSmino: 2.4;
		--FSmaxo: 3.2;
		--FSmin: calc(var(--FSmino) * 1rem);
		--FSmax: calc(var(--FSmaxo) * 1rem);
		--prefClamp: clamp(
			var(--FSmin),
			calc(
				calc(
						calc((var(--FSmaxo) - var(--FSmino)) * 10) /
							calc(var(--MQmaxo) - var(--MQmino))
					) * calc(100vw - var(--MQmin)) + var(--FSmin)
			),
			var(--FSmax)
		);

		font-size: clamp(var(--FSmin), var(--prefClamp), var(--FSmax));

		gap: 16px;
	}

	.hero-cta {
		flex-wrap: wrap-reverse;

		justify-content: start;

		--GAPmino: 16;
		--GAPmaxo: 20;
		--GAPmin: calc(var(--GAPmino) * 1px);
		--GAPmax: calc(var(--GAPmaxo) * 1px);
		--prefClamp: calc(
			calc(
					calc((var(--GAPmaxo) - var(--GAPmino)) * 1) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--GAPmin)
		);

		gap: clamp(var(--GAPmin), var(--prefClamp), var(--GAPmax));

		margin-right: 0.6px;
	}

	.hero-icons {
		--FSmino: 22;
		--FSmaxo: 28;
		--FSmin: calc(var(--FSmino) * 1px);
		--FSmax: calc(var(--FSmaxo) * 1px);
		--prefClamp: calc(
			calc(
					calc((var(--FSmaxo) - var(--FSmino)) * 1) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--FSmin)
		);

		font-size: clamp(var(--FSmin), var(--prefClamp), var(--FSmax));

		--GAPmino: 7;
		--GAPmaxo: 8;
		--GAPmin: calc(var(--GAPmino) * 1px);
		--GAPmax: calc(var(--GAPmaxo) * 1px);
		--prefClamp: calc(
			calc(
					calc((var(--GAPmaxo) - var(--GAPmino)) * 1) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--GAPmin)
		);

		gap: clamp(var(--GAPmin), var(--prefClamp), var(--GAPmax));
	}

	.hero-icons a {
		margin: 4px 8px 4px 0;
	}

	.hero-icons a svg {
		--FSmino: 24;
		--FSmaxo: 28;
		--FSmin: calc(var(--FSmino) * 1px);
		--FSmax: calc(var(--FSmaxo) * 1px);
		--prefClamp: calc(
			calc(
					calc((var(--FSmaxo) - var(--FSmino)) * 1) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--FSmin)
		);
		font-size: clamp(var(--FSmin), var(--prefClamp), var(--FSmax));
	}

	/******************/
	/*After Home*/
	/******************/
	/*
   Make home container flex 1 item 
   */

	/*i dont get why this persists over every size, go check in browser*/
	.home-container {
		grid-template-columns: minmax(0, 1fr);
	}

	.about-container {
		position: relative;
		justify-content: center;
	}

	.home-about {
		backdrop-filter: blur(20px);
	}
	.home-about svg,
	.home-classes svg {
		/* 19 24 bcs so translate is same*/

		--Hmino: 19;
		--Hmaxo: 24;
		--Hmin: calc(var(--Hmino) * 1px);
		--Hmax: calc(var(--Hmaxo) * 1px);
		--prefClamp: calc(
			calc(
					calc((var(--Hmaxo) - var(--Hmino)) * 1) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--Hmin)
		);
		height: clamp(var(--Hmin), var(--prefClamp), var(--Hmax));

		transform: translateY(2px);
	}

	.about-image {
		z-index: -1;
		position: absolute;

		--Wmino: 210;
		--Wmaxo: 275;
		--Wmin: calc(var(--Wmino) * 1px);
		--Wmax: calc(var(--Wmaxo) * 1px);
		--prefClamp: calc(
			calc(
					calc((var(--Wmaxo) - var(--Wmino)) * 1) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--Wmin)
		);
		width: clamp(var(--Wmin), var(--prefClamp), var(--Wmax));

		align-self: center;
	}

	.about-image * {
		border-radius: 30px;
		box-shadow: 3px 5px 20px rgba(0, 0, 0, 0.8),
			-3px -5px 20px rgba(50, 50, 50, 0.4);
	}
	.about-image::before {
		content: "";
		position: absolute;

		background-color: rgba(5, 5, 5, 0.8);
		border-radius: 30px;
		z-index: 0;
		height: 100%;
		width: 100%;
	}
	/*this shouldnt be about-con -> home-about*/
	.home-about::after {
		content: "";
		width: 100%;
		height: 100%;
		position: absolute;
		left: 0;
		bottom: 0;

		z-index: -1;
		backdrop-filter: blur(3px);
	}

	.home-classes {
		position: relative;
	}
	.classes-image {
		z-index: -1;
		position: absolute;
		height: 50%; /*fix this garbage dont use %*/
		--Wmino: 240;
		--Wmaxo: 300;
		--Wmin: calc(var(--Wmino) * 1px);
		--Wmax: calc(var(--Wmaxo) * 1px);
		--prefClamp: calc(
			calc(
					calc((var(--Wmaxo) - var(--Wmino)) * 1) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--Wmin)
		);
		width: clamp(var(--Wmin), var(--prefClamp), var(--Wmax));

		align-self: center;
	}

	.classes-image * {
		border-radius: 30px;
		box-shadow: 3px 5px 20px rgba(0, 0, 0, 0.8),
			-3px -5px 20px rgba(50, 50, 50, 0.4);
	}
	.classes-image::before {
		content: "";
		position: absolute;

		background-color: rgba(5, 5, 5, 0.8);
		border-radius: 30px;
		z-index: 0;
		height: 100%;
		width: 100%;
	}

	.home-classes::after {
		content: "";
		width: 100%;
		height: 100%;
		position: absolute;
		left: 0;
		bottom: 0;

		z-index: -1;
		backdrop-filter: blur(2px);
	}

	.home-container {
		width: 100%;
	}
	.home-about,
	.home-classes {
		min-width: auto;
		min-height: auto;

		--FSmino: 2;
		--FSmaxo: 2.7;
		--FSmin: calc(var(--FSmino) * 1rem);
		--FSmax: calc(var(--FSmaxo) * 1rem);
		--prefClamp: calc(
			calc(
					calc((var(--FSmaxo) - var(--FSmino)) * 10) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--FSmin)
		);
		font-size: clamp(var(--FSmin), var(--prefClamp), var(--FSmax));

		padding: 32px 24px 24px 24px;

		--PADmino: 32;
		--PADmaxo: 48;
		--PADmin: calc(var(--PADmino) * 1px);
		--PADmax: calc(var(--PADmaxo) * 1px);
		--prefClampPAD: calc(
			calc(
					calc((var(--PADmaxo) - var(--PADmino)) * 1) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--PADmin)
		);
		--prefValuePAD: clamp(
			var(--PADmin),
			var(--prefClampPAD),
			var(--PADmax)
		);

		padding: var(--prefValuePAD) 24px var(--prefValuePAD) 24px;
	}
	/*height: 60%; change this in classes-image
   48 -> 32 padding on the below hero 
   */

	/*implement the font size formula*/
	.home-about > * > :is(p),
	.home-classes > :is(p) {
		--FSmino: 3.2;
		--FSmaxo: 4.4;
		--FSmin: calc(var(--FSmino) * 1rem);
		--FSmax: calc(var(--FSmaxo) * 1rem);
		--prefClamp: calc(
			calc(
					calc((var(--FSmaxo) - var(--FSmino)) * 10) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--FSmin)
		);
		font-size: clamp(var(--FSmin), var(--prefClamp), var(--FSmax));
	}

	.home-about > * > :last-child,
	.home-classes > :last-child {
		padding: 0.2rem 0.4rem;
		margin: 0.2rem 0;
	}

	/*************/
	/*CtA section*/
	/*************/

	.home-cta-left,
	.home-cta-right {
		justify-self: center;

		border-radius: unset;
		margin: 20px;
		margin-top: 30px; /* margin*1.5 */

		width: 350px;
		height: 390px;

		width: 250px;
		height: 320px;

		--Wmino: 250;
		--Wmaxo: 350;
		--Wmin: calc(var(--Wmino) * 1px);
		--Wmax: calc(var(--Wmaxo) * 1px);
		--prefClamp: calc(
			calc(
					calc((var(--Wmaxo) - var(--Wmino)) * 1) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--Wmin)
		);
		width: clamp(var(--Wmin), var(--prefClamp), var(--Wmax));

		--Hmino: 320;
		--Hmaxo: 390;
		--Hmin: calc(var(--Hmino) * 1px);
		--Hmax: calc(var(--Hmaxo) * 1px);
		--prefClamp: calc(
			calc(
					calc((var(--Hmaxo) - var(--Hmino)) * 1) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--Hmin)
		);
		height: clamp(var(--Hmin), var(--prefClamp), var(--Hmax));
	}
	.home-cta-right {
		margin-top: 0px;
		margin-bottom: 30px;
	}

	.home-cta-left > p,
	.home-cta-right > p,
	.home-cta-right > p > a {
		font-size: 5rem;

		font-size: 4.2rem;

		--FSmino: 4.2;
		--FSmaxo: 5;
		--FSmin: calc(var(--FSmino) * 1rem);
		--FSmax: calc(var(--FSmaxo) * 1rem);
		--prefClamp: calc(
			calc(
					calc((var(--FSmaxo) - var(--FSmino)) * 10) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--FSmin)
		);
		font-size: clamp(var(--FSmin), var(--prefClamp), var(--FSmax));

		font-weight: 600;
	}
	.home-cta-left > p,
	.home-cta-right > p {
		justify-self: center;
		padding: 40px;

		padding: 20px;

		--PADmino: 20;
		--PADmaxo: 40;
		--PADmin: calc(var(--PADmino) * 1px);
		--PADmax: calc(var(--PADmaxo) * 1px);
		--prefClamp: calc(
			calc(
					calc((var(--PADmaxo) - var(--PADmino)) * 1) /
						calc(var(--MQmaxo) - var(--MQmino))
				) * calc(100vw - var(--MQmin)) + var(--PADmin)
		);
		padding: clamp(var(--PADmin), var(--prefClamp), var(--PADmax));
	}

	.border-left,
	.border-right {
		width: calc(100% + 2px);
		left: -1px;
	}
}

 {
	/*
   .home-about > * > :is(p), .home-classes > :is(p) -> 4.4rem

   .home-about, .home-classes {
  font-size: 3rem;


  button 
  .home-about > * > :last-child, .home-classes > :last-child
  font-weight: 500;
  padding: 0.4rem 0.8rem;
  margin: 1.2rem 0;
   


  u can on mouse over make elements have 
  		background-color: hsla(140, 15%, 50%, 0.1);
      it looks cooool


   	.hero-container:hover {
		background-color: hsla(140, 25%, 50%, 0.05);
	}

   but prob do it for pc later bcs phones dont hover much


   add on desktop when you scroll into view so that area lits on dim green color shown above, it would look very nice
   also what can be added are parhaps some pipets or whatever but could be cluttering 

   for the PHONE you could just make second image in the background and blur it additionally so it can be like yt video ambience, you gotta stretch it so it encompasses whole width of the screen'
   */
}
